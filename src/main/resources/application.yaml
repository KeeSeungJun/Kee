
# Spring boot info
spring:
  application:
    name: '@artifactId@'

  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost:3306/seonier
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:~/H2/seonier;MODE=MySQL;DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'classpath:db/schema.sql';
    username: sa
    password:
    hikari:
      minimum-idle: 2
      maximum-pool-size: 5

  # MariaDB로 변경 시 삭제.
  h2:
    console:
      enabled: true
      path: /h2/console

#  config:
#    import:
#      - optional:file:/opt/app-root/etc/conf/application-external.yaml
  profiles:
    group:
      dev: dev
      stage: stage
      prod: prod

  thymeleaf:
    cache: false
#    mode: HTML5

  web:
    resources:
      add-mappings: false
  ai:
    openai:
      api-key: ENC(pif1sV53mh2HAJtkZodCV/84zMmvwnG0gVfjH1+NJj624x6JINpYIH//3HiFT7axu39V06D10H7u3kWT1hAXFigI2Zu7O9jCWcT0Nd09sDlDI0JbfKukNGifc53IQygL3EWuHRmyp2PlaYvAPkEdJGBJRio0M4J71prAyTlyqc+mpy4aH63HXgbSPpvf0YPGxyg6aCPqC37LkK0DVbx75zEUyPCzc/BRtlOLKuhz0W/ssdkkPay+UHfPavF2AM+ulmpPb9j2ZPY9eY9LUMBjrw==)

# Mybatis 설정
mybatis:
  config-location: classpath:com/seonier/persistence/mybatis-config.xml
  mapper-locations: classpath:com/seonier/persistence/mapper/**/*.xml
  type-aliases-package: com.seonier.dto.request,seonier.kt.dto.response,com.seonier.persistence.model

# Server info
server:
  compression:
    enabled: true
  error:
    include-binding-errors: never
    include-exception: false
    include-message: never
    include-stacktrace: never
    page: /error
    whitelabel:
      enabled: false
  port: 8080
  servlet:
    context-path: '/'
  shutdown: graceful

  tomcat:
    # https://oingdaddy.tistory.com/224
    # Springboot 기동시 Failed to scan : FileNotFoundException *.jar 오류
    additional-tld-skip-patterns: '*.jar'

# Actuator properties
management:
  endpoint:
    env:
      show-values: always
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include:
          - env
          - health
          - info
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  info:
    env:
      enabled: true

# Application info
info:
  app:
    env:          '${spring.profiles.active:@env@}'
    group:        '@groupId@'
    artifact:     '@artifactId@'
    version:      '@version@'
    name:         '@name@'
    description:  '@description@'

prompt: |

  1. 일자리 리스트를 너에게 제공할 거야.
  일자리의 정보들이 담겨있고, 일자리 마다 정보의 나열 순서는 다음과 같아.
  '직업 이름', '업무 명', '직무 상세 내용', '필요한 자격, 면허', '계약 기간', '급여 정보', '근무 시간', '휴게 시간', '복지 조건', '근무지 주소', '위도', '경도', '인근 전철역', '버스 노선 번호'
  
  * 고용24에 올라온 일자리 리스트*
  {{JOBS}}
  
  2. 사용자의 정보를 제공할거고, 정보들의 나열 순서는 다음과 같아.
  사용자 생년월일: ${birthdate}
    기존 직업: ${occupation}
    우편번호: ${postcode}
    주소: ${address}
    성별: ${gender}
    보유중인 질병: ${userHealth}
  
  
  위의 일자리 정보를 토대로 사용자에게 가장 적합한 일자리 5군데를 추천받으려고 해.
  일자리의 추천 기준은 "주거지와 일자리 간의 거리, 성별, 보유중인 질병"에 따라 가장 적합한 일자리를 추천해주면 돼.
  
  다음과 같은 형식으로 답변해줘.
  1. 100점 만점에 몇 점인지 숫자로만 표시해줘.
  2. 일자리 추천 점수가 어떻게 나오게 되었는지 두 줄 정도로 설명해줘.
  답변은 한국어로 해줘.
  
  

---
# Development environment
spring:
  config:
    activate:
      on-profile: dev

---
# Staging environment
spring:
  config:
    activate:
      on-profile: stage

---
# Production environment
spring:
  config:
    activate:
      on-profile: prod

  # If you do not want property defaults to be applied you can set spring.devtools.add-properties to false in your application.properties.
  devtools:
    add-properties: false
    restart:
      enabled: false


decorator:
  datasource:
    p6spy:
      enable-logging: false

# ── H2 콘솔 활성화

# (이미 datasource 설정이 있다면 위에 붙여넣으시면 됩니다)

